pipeline {
    agent any

    stages {

        stage('Compiling Stage'){
            steps{
                echo "Pipeline Started Successfully"
               
                echo "Compilation done successfully!"
            }
        }
        stage('Testing Stage'){
            steps{
                echo "Entered Testing Stage"
                bat 'python test.py'
             
                echo "Unit Test done successfully!"
            }
        }

        stage('Final Confirmation'){
                    steps{
                        echo "Entered Confirmation Stage"
                        bat 'python run_tests.py'
                        echo "That is the result of testing"
                    }
                }
           stage('Building Docker Image'){
            steps{
                echo "Building Docker Image"
                bat 'docker image build -t urlshort .'
                echo "Image Built Successfully"
            }
        }
        stage('Stop previous containers') {
                     steps {
                         echo "Stopping Previous Containers"
                         powershell 'docker stop $(docker ps -a -q)'
                         powershell 'docker rm $(docker ps -q -f status=exited)'
                         echo "Previous Containers Stopped"
                           }
                     }
       

        stage('Running Docker Image'){
                    steps{
                        echo "Runningg Docker Image"
                        bat 'docker run -p 5000:5000 -d urlshort'
                        echo "Image Ran Successfully"
                    }

       stage ('Login to docker hub'){
            steps{
                bat 'docker login -u amardeep51 -p ab11edf8-1a03-40cb-8fd2-a7e5df5a9877'
                echo "Logged in"
            }
        }

        stage ('Push to docker hub'){
                    steps{
                        bat 'docker tag calculator_flask:latest amardeep51/calculator_flask:myfirstimage'
                        bat 'docker push chsai9319/sai-urlshort:myfirstimage'
                        echo "Image pushed successfully"
                    }
                }
        stage('Removing Untagged Images') {
                             steps {
                                 echo "Removing Untagged Images"
                                 powershell 'docker images -f "dangling=true"'
                                 powershell 'docker rmi $(docker images -f "dangling=true" -q) --force'
                                 echo "Untagged Images Removed"
                                    }
                             }


        stage('Terminate Stage'){
             steps{
                echo "Pipeline Terminated successfully!"
    }
    }
}
}
