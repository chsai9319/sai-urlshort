pipeline {
    agent any
    
    environment{
    dockerimage=''
    registry="chsai9319/sai-urlshort"
    registryCredential='Docker_ID'
    }
    stages {
        stage("Build"){
        steps{
        git branch: 'main', credentialsId: '2cf1742a-c06b-468d-aed9-f1aece323912', url: 'https://github.com/chsai9319/sai-urlshort.git'
        }
        }
        stage('Testing Stage'){
            steps{
                echo "Entered Testing Stage"
                bat 'python test.py'
             
                echo "Unit Test done successfully!"
            }
        }

        stage('Final Confirmation'){
                    steps{
                        echo "Entered Confirmation Stage"
                        bat 'python run_tests.py'
                        echo "That is the result of testing"
                    }
                }
        
           stage(' Docker Image Building'){
            steps{
                echo "Building Docker Image"
                bat 'docker image build -t sai-urlshort .'
                echo "Image Built Successfully"
            }
        }
        
        stage('Stop Running containers') {
                     steps {
                         echo "Stopping running and previous Containers"
                         powershell 'docker stop $(docker ps -a -q)'
                         powershell 'docker rm $(docker ps -q -f status=exited)'
                         echo "Running and Previous Containers Stopped"
                           }
                     }
        
        stage ('Push to docker hub'){
                    steps{
                        bat 'docker tag urlshort:myfirstimage chsai9319/sai-urlshort:myfirstimage'
                        bat 'docker push chsai9319/sai-urlshort:myfirstimage'
                        echo "Image pushed successfully"
                    }
                } 
         
        stage('Running Docker Image'){
                    steps{
                        echo "Running Docker Image at port 5000"
                        bat 'docker run -p 5000:5000 -d sai-urlshort'
                        echo "Image Running Successfully"
                    }
                    }
      
        stage('Removing Untagges Images') {
                             steps {
                                 echo "Removing Untagged Images"
                                 powershell 'docker images -f "dangling=true"'
                                 powershell 'docker rmi $(docker images -f "dangling=true" -q) --force'
                                 echo "Untagged Images Removed"
                                    }
                             }
        
        stage('Final Stage'){
             steps{
                echo "Pipeline Terminated successfully!"
    }
    }
}
}
